# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  category-service:
    # Configuration for building the docker image for the backend service
    build:
      context: category-service # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "1234:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - category-db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://category-db:3306/categories?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: catUser
      SPRING_DATASOURCE_PASSWORD: supersecret     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  product-service:
    build:
      context: product-service
      dockerfile: Dockerfile
    ports:
      - "1235:8080"
    restart: always
    depends_on: 
      - product-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://product-db:3306/products?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: prodUser
      SPRING_DATASOURCE_PASSWORD: supersecret     
    networks:
      - backend

  user-service:
    build:
      context: user-service
      dockerfile: Dockerfile
    ports:
      - "4747:8080"
    depends_on: 
      - product-db   
    networks:
      - backend

  # Database Service (Mysql)
  category-db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: categories
      MYSQL_USER: catUser
      MYSQL_PASSWORD: supersecret
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data-categories:/var/lib/mysql
    networks:
      - backend  

  product-db:
    image: mysql:5.7
    ports:
      - "3307:3306"
    restart: always
    environment:
      MYSQL_DATABASE: products
      MYSQL_USER: prodUser
      MYSQL_PASSWORD: supersecret
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data-products:/var/lib/mysql
    networks:
      - backend

  user-db:
    image: mysql:5.7
    ports:
      - "3308:3306"
    restart: always
    environment:
      MYSQL_DATABASE: users
      MYSQL_USER: usersUser
      MYSQL_PASSWORD: supersecret
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data-users:/var/lib/mysql
    networks:
      - backend
  
# Volumes
volumes:
  db-data-categories:
  db-data-products:
  db-data-users:

# Networks to be created to facilitate communication between containers
networks:
  backend:
    driver: bridge