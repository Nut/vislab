openapi: 3.0.0
info:
  version: "1.0.0"
  title: WebShop API
tags:
  - name: categories
    description: Everything about categories
  - name: products
    description: Everything about products
  - name: users
    description: Everything about users
  - name: roles
    description: Everything about roles
paths:
  /categories:
    get:
      tags:
        - categories
      summary: Get all categories
      responses:
        '200':
          description: All categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - categories
      summary: Creates a new category
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - categoryName
              properties:
                categoryName:
                  type: string
        description: The category to create.
  /categories/{id}:
    get:
      tags:
        - categories
      summary: Get category by id
      parameters:
        - in: path
          name: id
          required: true
          description: Category id
          schema:
            type: integer
      responses:
        '200':
          description: Category by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
        - categories
      summary: Delete category by id
      parameters:
        - in: path
          name: id
          required: true
          description: Category Id
          schema:
            type: integer
      responses:
        '200':
          description: Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /products:
    get:
      tags:
        - products
      summary: Get all products
      responses:
        '200':
          description: All products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - products
      summary: Creates a new product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - productName
                - price
                - categoryId
                - details
              properties:
                productName:
                  type: string
                price:
                  type: number
                categoryId:
                  type: integer
                details:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                properties:
                  productId:
                    type: integer
      description: The product to create.
  /products/{id}:
    get:
      tags:
        - products
      summary: Get product by id
      parameters:
        - in: path
          name: id
          required: true
          description: Product id
          schema:
            type: integer
      responses:
        '200':
          description: Product by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/search:
    post:
      tags:
        - products
      summary: Search for products
      responses:
        '200':
          description: Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - searchDescription
                - searchMinPrice
                - searchMaxPrice
              properties:
                searchDescription:
                  type: string
                searchMinPrice:
                  type: number
                searchMaxPrice:
                  type: number
        description: The category to create.
  /users/{username}:
    get:
      tags:
        - users
      summary: Get user by username
      parameters:
        - in: path
          name: username
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    head:
      tags:
        - users
      summary: Check if user already exists by username
      parameters:
        - in: path
          name: username
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: User already exists
        '404':
          description: User does not exist
  /users:
    post:
      tags:
        - users
      summary: Creates a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - name
                - lastname
                - password
                - role
              properties:
                username:
                  type: string
                name:
                  type: number
                lastname:
                  type: integer
                password:
                  type: string
                role:
                  type: object
                  required:
                    - type
                    - level
                  properties:
                    type:
                      type: string
                    level:
                      type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      description: The product to create.
  /roles/{level}:
    get:
      tags:
        - roles
      summary: Get role by level
      parameters:
        - in: path
          name: level
          required: true
          description: Level
          schema:
            type: integer
      responses:
        '200':
          description: Role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              price:
                type: number
              details:
                type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
        category:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
        details:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
        lastname:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        level:
          type: integer
    ApiResponse:
      type: object
      properties:
        message:
          type: string